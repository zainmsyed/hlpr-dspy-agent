[project]
name = "hlpr"
version = "0.1.0"
description = "Personal AI Assistant"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aioimaplib>=2.0.1",
    "dspy>=3.0.3",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "keyring>=25.6.0",
    "pydantic>=2.11.7",
    "pypdf>=6.0.0",
    "python-docx>=1.2.0",
    "python-multipart>=0.0.9",
    "pyyaml>=6.0.3",
    "rich>=14.1.0",
    "typer>=0.17.4",
]

[project.scripts]
hlpr = "hlpr.cli.main:main"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "uvicorn>=0.35.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    # Core errors and style
    "E", "F", "W",               # pycodestyle/pyflakes warnings & errors
    "I",                           # isort (import order)
    "UP",                          # pyupgrade
    "B",                           # flake8-bugbear (sane defaults)
    "N",                           # pep8-naming
    "C90",                         # mccabe complexity
    # Focused extras we actually use
    "ARG",                         # unused args
    "BLE",                         # exception handling best practices
    "RET",                         # return statements
    "SIM",                         # code simplifications
    "Q",                           # quotes
    "T20",                         # print statements
    "RUF",                         # Ruff-specific rules
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # allow asserts in tests only
    "PLR2004",  # allow asserts and magic values in tests
    "PLC0415",  # imports in test functions are acceptable
    "E501",     # line-too-long in test files
    "PT018",    # long boolean assertions in tests
    "ARG001",   # unused test args
    "SIM102",   # simplify nested ifs in tests
    "RET504",   # unnecessary assignment before return in tests
    "TRY003",   # avoid specifying long messages outside exception in tests
    "EM101",    # exception string literal in tests
]
"src/hlpr/document/**/*.py" = ["S101", "PTH123", "S603"]  # Document processing: allow asserts, file paths, subprocess calls
"src/hlpr/cli/**/*.py" = [
        "S101", "PTH123",  # CLI stubs: allow asserts and simple path usage
        "C901", "PLR0912", "PLR0915",  # cyclomatic complexity and branching
        "B008", "FBT001", "FBT003",  # typer Argument/Option defaults
        "A002",  # shadowing builtin names
        "E501",  # line-too-long
        "BLE001", "PLC0415", "TC003",  # exception patterns and import positions
        "SIM102", "TRY300", "EM101", "TRY301", "PLR0913",  # suppress nested if, return placement, exception msg, too many args
    ]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
pythonpath = [
    "src"
]
